{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  data() {\n    return {\n      valorInvestimento: \"\",\n      tempoInvestimento: null,\n      tempos: [{\n        text: \"6 meses\",\n        value: 6,\n        opcaoCallDivider: 0.016,\n        strikePrice: 0.03\n      }, {\n        text: \"12 meses\",\n        value: 12,\n        opcaoCallDivider: 0.022,\n        strikePrice: 0.06\n      }, {\n        text: \"18 meses\",\n        value: 18,\n        opcaoCallDivider: 0.028,\n        strikePrice: 0.10\n      }, {\n        text: \"24 meses\",\n        value: 24,\n        opcaoCallDivider: 0.051,\n        strikePrice: 0.35\n      }, {\n        text: \"36 meses\",\n        value: 36,\n        opcaoCallDivider: 0.061,\n        strikePrice: 0.60\n      }, {\n        text: \"60 meses\",\n        value: 60,\n        opcaoCallDivider: 0.064,\n        strikePrice: 1.00\n      }],\n      opcaoCall: null,\n      opcaoPut: null,\n      strikePrice: null,\n      dataExercicio: null\n    };\n  },\n  methods: {\n    simularInvestimento() {\n      if (!this.valorInvestimento || !this.tempoInvestimento) {\n        alert(\"Por favor, insira o valor do investimento e escolha o tempo de investimento.\");\n        return;\n      }\n      const selectedTempo = this.tempos.find(tempo => tempo.value === this.tempoInvestimento);\n      if (!selectedTempo) {\n        alert(\"Tempo de investimento inválido.\");\n        return;\n      }\n      const strikePrice = selectedTempo.strikePrice;\n      const currentDate = new Date();\n      const dataExercicio = new Date(currentDate);\n      dataExercicio.setMonth(dataExercicio.getMonth() + selectedTempo.value);\n      this.opcaoCall = (this.valorInvestimento / selectedTempo.opcaoCallDivider).toFixed(2);\n      this.opcaoPut = (this.opcaoCall * strikePrice).toFixed(2);\n      this.strikePrice = strikePrice.toFixed(2);\n      this.dataExercicio = dataExercicio.toLocaleDateString(\"pt-BR\").slice(0, 10); // Format as DD-MM-YYYY\n    }\n  }\n};","map":{"version":3,"names":["ref","data","valorInvestimento","tempoInvestimento","tempos","text","value","opcaoCallDivider","strikePrice","opcaoCall","opcaoPut","dataExercicio","methods","simularInvestimento","alert","selectedTempo","find","tempo","currentDate","Date","setMonth","getMonth","toFixed","toLocaleDateString","slice"],"sources":["/Users/andersonvasconcelos/Documents/GitHub/equals9/src/components/InputForm.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <h1 class=\"display-3 text-center my-5\">Simulador de Investimentos Opções Equals9 </h1>\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <input v-model=\"valorInvestimento\" type=\"number\" class=\"input-box\" placeholder=\"Valor do Investimento em R$\">\n      </div>\n\n      <div class=\"col-md-6\">\n        <select v-model=\"tempoInvestimento\" class=\"input-box\">\n          <option v-for=\"tempo in tempos\" :value=\"tempo.value\" :key=\"tempo.value\">{{ tempo.text }}</option>\n        </select>\n      </div>\n    </div>\n\n    <button @click=\"simularInvestimento\" class=\"btn-simular\">Simular</button>\n\n    <hr class=\"my-5\">\n\n    <div v-if=\"opcaoCall\">\n      <h3 class=\"text-center\">Preço de exercício da EQ9:</h3>\n      <p  class=\"text-center\">R$ {{ strikePrice }}</p>\n      <h3 class=\"text-center\">Data de Exercício:</h3>\n      <p  class=\"text-center\">{{ dataExercicio }}</p>\n      <h3 class=\"text-center\">Opção de Venda - Valores em R$:</h3>\n      <p class=\"text-center\">R$ {{ opcaoPut }}</p>\n    </div>\n\n    <div v-if=\"opcaoPut !== null\">\n      <h3 class=\"text-center\">Opção de Compra - Valores em EQ9:</h3>\n      <p class=\"text-center\">Tokens: {{ opcaoCall }} EQ9</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  data() {\n    return {\n      valorInvestimento: \"\",\n      tempoInvestimento: null,\n      tempos: [\n        { text: \"6 meses\", value: 6, opcaoCallDivider: 0.016, strikePrice: 0.03 },\n        { text: \"12 meses\", value: 12, opcaoCallDivider: 0.022, strikePrice: 0.06 },\n        { text: \"18 meses\", value: 18, opcaoCallDivider: 0.028, strikePrice: 0.10 },\n        { text: \"24 meses\", value: 24, opcaoCallDivider: 0.051, strikePrice: 0.35 },\n        { text: \"36 meses\", value: 36, opcaoCallDivider: 0.061, strikePrice: 0.60 },\n        { text: \"60 meses\", value: 60, opcaoCallDivider: 0.064, strikePrice: 1.00 },\n      ],\n      opcaoCall: null,\n      opcaoPut: null,\n      strikePrice: null,\n      dataExercicio: null,\n      \n    };\n  },\n  methods: {\n    simularInvestimento() {\n      if (!this.valorInvestimento || !this.tempoInvestimento) {\n        alert(\"Por favor, insira o valor do investimento e escolha o tempo de investimento.\");\n        return;\n      }\n\n      const selectedTempo = this.tempos.find((tempo) => tempo.value === this.tempoInvestimento);\n      if (!selectedTempo) {\n        alert(\"Tempo de investimento inválido.\");\n        return;\n      }\n\n      const strikePrice = selectedTempo.strikePrice;\n      const currentDate = new Date();\n      const dataExercicio = new Date(currentDate);\n      dataExercicio.setMonth(dataExercicio.getMonth() + selectedTempo.value);\n\n      this.opcaoCall = (this.valorInvestimento / selectedTempo.opcaoCallDivider).toFixed(2);\n      this.opcaoPut = (this.opcaoCall * strikePrice).toFixed(2);\n      this.strikePrice = strikePrice.toFixed(2);\n      this.dataExercicio = dataExercicio.toLocaleDateString(\"pt-BR\").slice(0, 10); // Format as DD-MM-YYYY\n    },\n  },\n};\n</script>\n\n<style>\n.app-container {\n  background-color: linear-gradient(70deg, #378805 5%, #c1c161 100%);;\n  background-image: linear-gradient(70deg, #378805 5%, #c1c161 100%);;\n  padding: 50px;\n}\n\n.input-box {\n  color: #000;\n  font-weight: bold;\n  padding: 10px;\n  width: 85%;\n  box-sizing: border-box;\n}\n\n.btn-simular {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n</style>"],"mappings":"AAqCA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,EAAE;MACrBC,iBAAiB,EAAE,IAAI;MACvBC,MAAM,EAAE,CACN;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,CAAC;QAAEC,gBAAgB,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAK,CAAC,EACzE;QAAEH,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,gBAAgB,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAK,CAAC,EAC3E;QAAEH,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,gBAAgB,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAK,CAAC,EAC3E;QAAEH,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,gBAAgB,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAK,CAAC,EAC3E;QAAEH,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,gBAAgB,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAK,CAAC,EAC3E;QAAEH,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE,EAAE;QAAEC,gBAAgB,EAAE,KAAK;QAAEC,WAAW,EAAE;MAAK,CAAC,CAC5E;MACDC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdF,WAAW,EAAE,IAAI;MACjBG,aAAa,EAAE;IAEjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACX,iBAAgB,IAAK,CAAC,IAAI,CAACC,iBAAiB,EAAE;QACtDW,KAAK,CAAC,8EAA8E,CAAC;QACrF;MACF;MAEA,MAAMC,aAAY,GAAI,IAAI,CAACX,MAAM,CAACY,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACX,KAAI,KAAM,IAAI,CAACH,iBAAiB,CAAC;MACzF,IAAI,CAACY,aAAa,EAAE;QAClBD,KAAK,CAAC,iCAAiC,CAAC;QACxC;MACF;MAEA,MAAMN,WAAU,GAAIO,aAAa,CAACP,WAAW;MAC7C,MAAMU,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC9B,MAAMR,aAAY,GAAI,IAAIQ,IAAI,CAACD,WAAW,CAAC;MAC3CP,aAAa,CAACS,QAAQ,CAACT,aAAa,CAACU,QAAQ,CAAC,IAAIN,aAAa,CAACT,KAAK,CAAC;MAEtE,IAAI,CAACG,SAAQ,GAAI,CAAC,IAAI,CAACP,iBAAgB,GAAIa,aAAa,CAACR,gBAAgB,EAAEe,OAAO,CAAC,CAAC,CAAC;MACrF,IAAI,CAACZ,QAAO,GAAI,CAAC,IAAI,CAACD,SAAQ,GAAID,WAAW,EAAEc,OAAO,CAAC,CAAC,CAAC;MACzD,IAAI,CAACd,WAAU,GAAIA,WAAW,CAACc,OAAO,CAAC,CAAC,CAAC;MACzC,IAAI,CAACX,aAAY,GAAIA,aAAa,CAACY,kBAAkB,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;IAC/E;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}